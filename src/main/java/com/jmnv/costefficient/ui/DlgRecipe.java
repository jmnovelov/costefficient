/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jmnv.costefficient.ui;

import com.jmnv.costefficient.controller.IngredientGateway;
import com.jmnv.costefficient.controller.RecipeGateway;
import com.jmnv.costefficient.model.Recipe;
import com.jmnv.costefficient.model.RecipeDetail;
import java.awt.Component;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author jmnov
 */
public class DlgRecipe extends javax.swing.JDialog {

    private RecipeGateway recipeGateway;
    
    private long id;
    
    private DialogNotifier<Recipe> notifier;
    
    private IngredientGateway ingredientGateway;
    
    private Set<Long> ingredients = new HashSet<>();    
    
    /**
     * Creates new form DlgRecipe
     */
    public DlgRecipe(java.awt.Frame parent, RecipeGateway recipeGateway, IngredientGateway ingredientGateway, Recipe recipe, DialogNotifier<Recipe> notifier) {
        super(parent, true);
        initComponents();
        setLocationRelativeTo(parent);
        this.recipeGateway = recipeGateway;
        this.ingredientGateway = ingredientGateway;
        this.notifier = notifier;
        mapRecipeToUI(recipe);
        recipeDetailTableModel1.addTableModelListener((e) -> {
            lblTotalCost.setText(String.format("$%.2f", recipeDetailTableModel1.getTotalValue()));
        });
        tblIngredients.setDefaultRenderer(Double.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                if (column >= 3)
                    setText(String.valueOf(String.format("$%.2f", (Double) value)));
                return component; //To change body of generated methods, choose Tools | Templates.
            }
            
        });
    }
    
    private void mapRecipeToUI(Recipe recipe) {
        if (recipe != null) {
            id = recipe.getId();
            txtName.setText(recipe.getName());
            txtPrice.setText(String.format("%.2f", recipe.getPrice()));
            txtInstructions.setText(recipe.getInstructions());
            btnAddIngredient.setEnabled(false);
            btnDeleteIngredient.setEnabled(false);
            
            new SwingWorker<List<RecipeDetail>, Object>() {
                @Override
                protected List<RecipeDetail> doInBackground() throws Exception {
                    return recipeGateway.getDetails(id);
                }

                @Override
                protected void done() {
                    try {
                        recipeDetailTableModel1.addAll(get());
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(DlgRecipe.this, 
                                "Error al obtener los ingredientes: " 
                                        + ex.getMessage(), 
                                "Hubo un problema", 
                                JOptionPane.ERROR_MESSAGE);
                    } finally {
                        btnAddIngredient.setEnabled(true);
                        btnDeleteIngredient.setEnabled(true);
                    }
                }

            }.execute();
        }
    }
    
    private Recipe mapRecipeFromUI() throws NumberFormatException {
        double price = Double.parseDouble(txtPrice.getText().trim());
        Recipe recipe = new Recipe();
        recipe.setId(id);
        recipe.setName(txtName.getText().trim());
        recipe.setPrice(price);
        recipe.setInstructions(txtInstructions.getText().trim());
        return recipe;
    }

    private void cleanFields() {
        txtName.setText("");
        txtPrice.setText("");
        txtInstructions.setText("");
        recipeDetailTableModel1.clear();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recipeDetailTableModel1 = new com.jmnv.costefficient.ui.RecipeDetailTableModel();
        btnCancel = new javax.swing.JButton();
        btnSaveRecipe = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblIngredients = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInstructions = new javax.swing.JTextArea();
        btnAddIngredient = new javax.swing.JButton();
        btnDeleteIngredient = new javax.swing.JButton();
        lblTotalCost = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar/Agregar Receta");
        setBackground(new java.awt.Color(255, 255, 255));

        btnCancel.setText("Cerrar");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSaveRecipe.setText("Guardar Receta");
        btnSaveRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveRecipeActionPerformed(evt);
            }
        });

        tblIngredients.setModel(recipeDetailTableModel1);
        jScrollPane2.setViewportView(tblIngredients);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Nombre:");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Precio:");

        jLabel3.setText("Instrucciones:");

        txtInstructions.setColumns(20);
        txtInstructions.setRows(5);
        jScrollPane1.setViewportView(txtInstructions);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice)
                            .addComponent(txtName)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnAddIngredient.setText("Agregar Ingredientes");
        btnAddIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddIngredientActionPerformed(evt);
            }
        });

        btnDeleteIngredient.setText("Eliminar Ingredientes");
        btnDeleteIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteIngredientActionPerformed(evt);
            }
        });

        lblTotalCost.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTotalCost.setText("$0");

        jLabel5.setText("Costo Total:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSaveRecipe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddIngredient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteIngredient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotalCost)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddIngredient)
                            .addComponent(btnDeleteIngredient)
                            .addComponent(lblTotalCost)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSaveRecipe))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveRecipeActionPerformed
        try {
            Recipe recipe = this.mapRecipeFromUI();
            long id = recipeGateway.saveRecipe(
                    recipe, 
                    new ArrayList<>(recipeDetailTableModel1.getAll())
            );
            recipe.setId(id);
            notifier.notify(recipe);
            
            if (this.id != 0)
                this.dispose();
            else
                cleanFields();
            
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, 
                    "Precio no valido: " + txtPrice.getText(), 
                    "Error de validacion",
                    JOptionPane.WARNING_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, 
                    ex.getMessage(), 
                    "No se pudo guardar la receta",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveRecipeActionPerformed

    private void btnAddIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddIngredientActionPerformed
        DlgRecipeDetail dlgRecipeDetail = new DlgRecipeDetail((JFrame) this.getParent(), ingredientGateway, null, (rd) -> {
            if (!ingredients.contains(rd.getIngredient().getIngredientId())) {
                recipeDetailTableModel1.add(rd);
                ingredients.add(rd.getIngredient().getIngredientId());
            }
        });
        
        dlgRecipeDetail.setVisible(true);
    }//GEN-LAST:event_btnAddIngredientActionPerformed

    private void btnDeleteIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteIngredientActionPerformed
        int row = tblIngredients.getSelectedRow();
        
        if (row < 0)
            return;
        
        row = tblIngredients.convertRowIndexToModel(row);
        long id = recipeDetailTableModel1.get(row).getIngredient().getIngredientId();
        recipeDetailTableModel1.deleteRow(row);
        ingredients.remove(id);
    }//GEN-LAST:event_btnDeleteIngredientActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddIngredient;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeleteIngredient;
    private javax.swing.JButton btnSaveRecipe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTotalCost;
    private com.jmnv.costefficient.ui.RecipeDetailTableModel recipeDetailTableModel1;
    private javax.swing.JTable tblIngredients;
    private javax.swing.JTextArea txtInstructions;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
